# 問題
## ファイルの先頭10行に対して、各行の1列目だけを抜き出して表示せよ。確認にはcutコマンドなどを用いよ。

head -n 10 人気の名前.txt | cut -d $'\t' -f 1

## $があることによってタブと認識される。\tだけだとエラー。なぜなら、''のところには区切り文字である一文字しか書けないから。

# 1. cut とは
# 意味：テキストから特定の「列」や「文字の位置」だけを切り出すコマンド
# 用途：
# CSVやTSVなど、区切り文字で分かれたデータから特定列を抽出
# 文字位置（カラム位置）で一部分だけ切り出し

# 2. 基本構文
# cut [オプション] ファイル名
# よく使う主なオプションは 2種類の指定方法です。

# A. 区切り文字で列を指定（-d と -f）

# cut -d '区切り文字' -f 列番号 ファイル名
# -d → delimiter（区切り文字）を指定

# -f → field（列番号）を指定（複数列はカンマ区切り）

# 例1：CSVファイルの1列目を抽出
# cut -d ',' -f 1 data.csv

# 例2：TSVファイルの2列目と4列目を抽出
# cut -d $'\t' -f 2,4 data.tsv
# B. 文字位置で切り出す（-c）
# cut -c 開始-終了 ファイル名
# -c → character position（文字位置）

# 開始-終了 → 範囲指定（例: 1-5 → 1文字目から5文字目まで）

# 例：先頭5文字を切り出し
# cut -c 1-5 file.txt
# 3. パイプと組み合わせる
# cut は他のコマンドと組み合わせると便利です。

# 例：ls -l の結果からファイルサイズだけ取り出す
# ls -l | cut -c 23-30
# 例：ファイルの2列目だけ抽出（区切りはスペース）
# cat file.txt | tr -s ' ' | cut -d ' ' -f 2
# （tr -s ' ' でスペースを1つに圧縮してからcut）

# 4. まとめ表
# オプション	意味	例
# -d	区切り文字の指定	-d ','（カンマ区切り）
# -f	抽出する列番号	-f 1,3（1列目と3列目）
# -c	抽出する文字位置	-c 1-5（1〜5文字目）